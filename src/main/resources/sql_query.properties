#queries from StartUpDao.class
tables.delete.ifexist=DROP TABLE IF EXISTS groups CASCADE; \
                DROP TABLE IF EXISTS students CASCADE; \
                DROP TABLE IF EXISTS courses CASCADE; \
                DROP TABLE IF EXISTS students_courses CASCADE
#queries from GroupDao.class
group.add=INSERT INTO groups(group_name) VALUES (?)
group.getById=SELECT group_name FROM groups WHERE group_id = ?
group.getAll=SELECT group_id, group_name FROM groups
group.update=UPDATE groups SET group_name = ? WHERE group_id = ?
group.delete=DELETE FROM groups WHERE group_id = ?
group.find.all.less.student.count=SELECT groups.group_id, groups.group_name, COUNT(student_id) \
                                  FROM groups \
                                  LEFT JOIN students ON groups.group_id = students.group_id \
                                  GROUP BY groups.group_id, groups.group_name \
                                  HAVING COUNT(student_id) <= ?
#queries from CourseDao.class
course.add=INSERT INTO courses(course_name, course_description) VALUES (?, ?)
course.getById=SELECT course_id, course_name, course_description FROM courses WHERE course_id = ?
course.getAll=SELECT course_id, course_name, course_description FROM courses
course.update=UPDATE courses SET course_name = ?, course_description = ? WHERE course_id = ?
course.delete=DELETE FROM courses WHERE course_id = ?
course.getMissingForStudentId=SELECT course_id, course_name, course_description \
							  FROM courses c \
							  WHERE NOT EXISTS (SELECT * FROM students_courses s_c WHERE student_id = ? \
							  AND c.course_id = s_c.course_id)
course.getForStudentId=SELECT courses.course_id, courses.course_name, courses.course_description \
                        FROM courses \
                        INNER JOIN students_courses ON courses.course_id = students_courses.course_id \
                        WHERE students_courses.student_id = ?
#queries from StudentDao.class for table students
student.add=INSERT INTO students(group_id, first_name, last_name) VALUES (?, ?, ?)
student.getById=SELECT student_id, group_id, first_name, last_name FROM students WHERE student_id = ?
student.getAll=SELECT student_id, group_id, first_name, last_name FROM students
student.update=UPDATE students SET group_id = ?, first_name = ?, last_name = ? WHERE student_id = ?
student.delete=DELETE FROM students WHERE student_id = ?
student.getAll.with.course.name=SELECT students.student_id, students.group_id, students.first_name, students.last_name \
                                FROM students \
                                INNER JOIN (students_courses INNER JOIN courses USING (course_id)) \
                                USING (student_id) \
                                WHERE courses.course_name = ?             
student_course.create.table=CREATE TABLE public.students_courses \
             ( \
             student_id integer NOT NULL, \
             course_id integer NOT NULL, \
             CONSTRAINT students_courses_pkey PRIMARY KEY (student_id, course_id), \
             CONSTRAINT course_id FOREIGN KEY (course_id) \
             REFERENCES public.courses (course_id) MATCH SIMPLE \
             ON UPDATE NO ACTION \
             ON DELETE CASCADE, \
             CONSTRAINT student_id FOREIGN KEY (student_id) \
             REFERENCES public.students (student_id) MATCH SIMPLE \
             ON UPDATE NO ACTION \
             ON DELETE CASCADE \
             );
student_course.add=INSERT INTO students_courses(student_id, course_id) VALUES (?, ?)
student_course.delete=DELETE FROM students_courses WHERE student_id = ? and course_id = ?

